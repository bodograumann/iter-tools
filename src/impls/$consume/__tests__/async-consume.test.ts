/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$consume.test.ts#1643907550721
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import { asyncConsume } from 'iter-tools-es';
import { asyncWrap } from '../../../test/async-helpers.js';

describe('asyncConsume', () => {
  describe('when iterable is empty', () => {
    it('does not error', async () => {
      expect(await asyncConsume(null)).toBe(undefined);
      expect(await asyncConsume(undefined)).toBe(undefined);
      expect(await asyncConsume(asyncWrap([]))).toBe(undefined);
    });
  });

  describe('when consuming an iterable has side effects', () => {
    it('the effects are triggered', async () => {
      const arr: Array<number> = [];

      expect(
        await asyncConsume(
          (function* () {
            arr.push(1);
            yield;
            arr.push(2);
            yield;
            arr.push(3);
          })(),
        ),
      ).toBe(undefined);
      expect(arr).toEqual([1, 2, 3]);
    });
  });
});
