/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$cycle.spec.ts#1643907550723
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import assert from 'static-type-assert';
import { AsyncIterableIterator } from '../../../types/async-iterable';
import { asyncCycle } from 'iter-tools-es';

declare const Ø: never;

assert<AsyncIterableIterator<0 | 1 | 2>>(asyncCycle(Ø as [0, 1, 2]));

assert<
  | AsyncIterableIterator<never>
  | AsyncIterableIterator<0 | 1>
  | AsyncIterableIterator<string | number | boolean>
>(asyncCycle(Ø as [] | [0, 1] | [string, number, boolean]));

assert<AsyncIterableIterator<string | number | boolean>>(
  asyncCycle(Ø as [] | [0, 1] | [string, number, boolean]),
);

assert<AsyncIterableIterator<string>>(asyncCycle(Ø as string));

assert<AsyncIterableIterator<0 | 1 | 2>>(asyncCycle(Ø as Set<0 | 1 | 2>));
