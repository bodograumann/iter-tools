/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$cycle.test.ts#1643907550723
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import { asyncCycle, asyncSlice } from 'iter-tools-es';
import { asyncWrap, asyncUnwrap } from '../../../test/async-helpers.js';

describe('asyncCycle', () => {
  describe('when source is empty', () => {
    it('yields no values', async () => {
      expect(await asyncUnwrap(asyncCycle(null))).toEqual([]);
      expect(await asyncUnwrap(asyncCycle(undefined))).toEqual([]);
      expect(await asyncUnwrap(asyncCycle([]))).toEqual([]);
    });
  });

  describe('when source has values', () => {
    it('yields those values repeatedly forever', async () => {
      expect(await asyncUnwrap(asyncSlice(0, 7, asyncCycle(asyncWrap([1, 2, 3]))))).toEqual([
        1,
        2,
        3,
        1,
        2,
        3,
        1,
      ]);
    });
  });
});
