/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$drop.test.ts#1643837503055
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import { asyncDrop } from 'iter-tools-es';
import { asyncWrap, asyncUnwrap } from '../../../test/async-helpers.js';

describe('asyncDrop', () => {
  describe('when source is empty', () => {
    it('yields no values', async () => {
      expect(await asyncUnwrap(asyncDrop(0, null))).toEqual([]);
      expect(await asyncUnwrap(asyncDrop(0, undefined))).toEqual([]);
      expect(await asyncUnwrap(asyncDrop(0, asyncWrap([])))).toEqual([]);
    });
  });

  describe('when n is smaller than size(source)', () => {
    it('drops the first n values and yields the rest', async () => {
      expect(await asyncUnwrap(asyncDrop(1, asyncWrap([1, 2, 3])))).toEqual([2, 3]);
    });
  });

  describe('when n is larger than size(source)', () => {
    it('yields no values', async () => {
      expect(await asyncUnwrap(asyncDrop(4, asyncWrap([1, 2, 3])))).toEqual([]);
    });
  });
});
