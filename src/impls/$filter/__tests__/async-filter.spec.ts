/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$filter.spec.ts#1643837503059
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import assert from 'static-type-assert';

import { AsyncIterable, AsyncIterableIterator } from '../../../types/async-iterable';
import { asyncFilter } from 'iter-tools-es';

declare const Ø: never;

assert<AsyncIterableIterator<string>>(
  asyncFilter(
    Ø as (value: string | number) => value is string,
    Ø as AsyncIterable<string | number>,
  ),
);

assert<AsyncIterableIterator<number>>(
  asyncFilter(
    Ø as (value: string | number) => value is number,
    Ø as AsyncIterable<string | number>,
  ),
);

assert<AsyncIterableIterator<0>>(
  asyncFilter(Ø as (value: string | number) => value is 0, Ø as AsyncIterable<string | number>),
);

assert<AsyncIterableIterator<string | number>>(
  asyncFilter(
    Ø as (value: string | number) => boolean,
    Ø as AsyncIterable<string | number> | null | undefined,
  ),
);
