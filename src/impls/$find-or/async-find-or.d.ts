/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$find-or.d.ts#1643907550731
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import { AsyncWrappable } from '../../types/async-iterable';

declare function asyncFindOr<N, T, S extends T>(
  notFoundValue: N,
  predicate: (value: T, i: number) => value is S,
): (iterable: AsyncWrappable<T>) => Promise<S | N>;

declare function asyncFindOr<N, T>(
  notFoundValue: N,
  predicate: (value: T, i: number) => boolean | Promise<boolean>,
): (iterable: AsyncWrappable<T>) => Promise<T | N>;

declare function asyncFindOr<N, T, S extends T>(
  notFoundValue: N,
  predicate: (value: T, i: number) => value is S,
  iterable: AsyncWrappable<T>,
): Promise<S | N>;

declare function asyncFindOr<N, T>(
  notFoundValue: N,
  predicate: (value: T, i: number) => boolean | Promise<boolean>,
  iterable: AsyncWrappable<T>,
): Promise<T | N>;

export { asyncFindOr };
