/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$flat-map.test.ts#1643837503065
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import { asyncFlatMap } from 'iter-tools-es';
import { asyncWrap, asyncUnwrap } from '../../../test/async-helpers.js';

describe('asyncFlatMap', () => {
  describe('when source is empty', () => {
    it('yields no values', async () => {
      expect(await asyncUnwrap(asyncFlatMap((value: any) => value, null))).toEqual([]);
      expect(await asyncUnwrap(asyncFlatMap((value: any) => value, undefined))).toEqual([]);
      expect(await asyncUnwrap(asyncFlatMap((value: any) => value, asyncWrap([])))).toEqual([]);
    });
  });

  describe('when source has values', () => {
    it('concatenates result of func(value, i) for each value in source', async () => {
      const iter = asyncFlatMap((value: number, i: number) => [i, value], asyncWrap([1, 2, 3]));
      expect(await asyncUnwrap(iter)).toEqual([0, 1, 1, 2, 2, 3]);
    });
  });
});
