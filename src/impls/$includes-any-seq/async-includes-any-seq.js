/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$includes-any-seq.js#1643907550739
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import { _asyncIterator } from '../../internal/asyncish.js';

import { asyncIterableCurry } from '../../internal/async-iterable.js';
import { asyncSeqsToArray } from '../../internal/async-any-seq.js';
import { __asyncWindowAhead } from '../$window-ahead/async-window-ahead.js';
import { __startsWithAnySeq } from '../$starts-with-any-seq/starts-with-any-seq.js';

export async function __asyncIncludesAnySeq(iterable, seqs, same = Object.is) {
  const seqsArr = await asyncSeqsToArray(seqs);

  if (!seqsArr.length) return false;
  if (seqsArr.find((seq) => !seq.length)) return true;

  const maxMatchLength = seqsArr.reduce((max, { length }) => Math.max(max, length), 1);

  let _iteratorAbruptCompletion = false;
  let _didIteratorError = false;
  let _iterator;
  let _iteratorError;

  try {
    _iterator = _asyncIterator(__asyncWindowAhead(iterable, maxMatchLength));
    for (
      let _step, _step2;
      (_step2 = _iterator.next()),
        (_iteratorAbruptCompletion = !(_step =
          !(_step2 instanceof Promise) && !(_step2.value instanceof Promise)
            ? _step2
            : await _step2).done);
      _iteratorAbruptCompletion = false
    ) {
      const buffer = _step.value;
      if (__startsWithAnySeq(buffer, seqsArr, same)) {
        return true;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (_iteratorAbruptCompletion && _iterator.return != null) {
        await _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return false;
}

export const asyncIncludesAnySeq = /*#__PURE__*/ asyncIterableCurry(__asyncIncludesAnySeq, {
  minArgs: 1,
  maxArgs: 2,
  reduces: true,
});
