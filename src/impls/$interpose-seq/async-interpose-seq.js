/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$interpose-seq.js#1643907550744
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import {
  _awaitAsyncGenerator as _awaitAsyncGenerator2,
  _wrapAsyncGenerator,
  _awaitAsyncGenerator,
  _asyncIterator as _asyncIterator2,
  _asyncGeneratorDelegate,
  _asyncIterator,
} from '../../internal/asyncish.js';

import { asyncIterableCurry, asyncCache } from '../../internal/async-iterable.js';

export function __asyncInterposeSeq(_x, _x2) {
  return _$__interposeSeq.apply(this, arguments);
}

function _$__interposeSeq() {
  _$__interposeSeq = _wrapAsyncGenerator(function* (source, seq) {
    const subseq_ = yield _awaitAsyncGenerator2(asyncCache(seq));

    let first = true;
    let _iteratorAbruptCompletion = false;
    let _didIteratorError = false;
    let _iterator;
    let _iteratorError;

    try {
      _iterator = _asyncIterator(source);
      for (
        let _step, _step2;
        (_step2 = _iterator.next()),
          (_iteratorAbruptCompletion = !(_step =
            !(_step2 instanceof Promise) && !(_step2.value instanceof Promise)
              ? _step2
              : yield _awaitAsyncGenerator2(_step2)).done);
        _iteratorAbruptCompletion = false
      ) {
        const sourceValue = _step.value;
        if (!first) yield* _asyncGeneratorDelegate(_asyncIterator2(subseq_), _awaitAsyncGenerator);
        yield sourceValue;
        first = false;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (_iteratorAbruptCompletion && _iterator.return != null) {
          yield _awaitAsyncGenerator2(_iterator.return());
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  });

  return _$__interposeSeq.apply(this, arguments);
}

export const asyncInterposeSeq = /*#__PURE__*/ asyncIterableCurry(__asyncInterposeSeq);
