/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$interpose.test.ts#1643837503076
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import { asyncInterpose } from 'iter-tools-es';
import { asyncWrap, asyncUnwrap } from '../../../test/async-helpers.js';

describe('asyncInterpose', () => {
  describe('when source is empty', () => {
    it('yields no values', async () => {
      expect(await asyncUnwrap(asyncInterpose('', null))).toEqual([]);
      expect(await asyncUnwrap(asyncInterpose('', undefined))).toEqual([]);
      expect(await asyncUnwrap(asyncInterpose('', asyncWrap([])))).toEqual([]);
    });
  });

  describe('when source contains a single value', () => {
    it('yields that value', async () => {
      const iter = asyncInterpose(null, asyncWrap([1]));
      expect(await asyncUnwrap(iter)).toEqual([1]);
    });
  });

  describe('when source contains multiple values', () => {
    it('yields interposed value between each value from source', async () => {
      const iter = asyncInterpose(null, asyncWrap([1, 2, 3]));
      expect(await asyncUnwrap(iter)).toEqual([1, null, 2, null, 3]);
    });
  });
});
