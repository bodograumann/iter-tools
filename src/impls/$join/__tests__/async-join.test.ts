/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$join.test.ts#1643837503082
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import { asyncJoin } from 'iter-tools-es';
import { asyncWrapDeep, asyncUnwrap } from '../../../test/async-helpers.js';

describe('asyncJoin', () => {
  it('should join each group with the provided value', async () => {
    expect(await asyncUnwrap(asyncJoin(asyncWrapDeep([[1], [2], [3]])))).toEqual([1, 2, 3]);
  });

  it('should have two adjacent separators when encountering an empty group', async () => {
    expect(await asyncUnwrap(asyncJoin(asyncWrapDeep([[1], [], [3]])))).toEqual([1, 3]);
  });

  it('should yield a single separator when joining two empty groups', async () => {
    expect(await asyncUnwrap(asyncJoin(asyncWrapDeep([[], []])))).toEqual([]);
  });

  it('passes through the empty iterable', async () => {
    expect(await asyncUnwrap(asyncJoin(null))).toEqual([]);
    expect(await asyncUnwrap(asyncJoin(undefined))).toEqual([]);
    expect(await asyncUnwrap(asyncJoin(asyncWrapDeep([])))).toEqual([]);
  });
});
