/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$starts-with.test.ts#1643837503104
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import { startsWith } from 'iter-tools-es';
import { wrap } from '../../../test/helpers.js';

describe('startsWith', () => {
  describe('when iterable starts with value', () => {
    it('returns true', () => {
      expect(startsWith(1, wrap([1, 2, 3]))).toBe(true);
    });
  });

  describe('when iterable does not start with with value', () => {
    it('returns false', () => {
      expect(startsWith(2, wrap([1, 2, 3]))).toBe(false);
    });
  });

  describe('when iterable is empty', () => {
    it('returns false', () => {
      expect(startsWith(null, wrap([]))).toBe(false);
    });
  });

  describe('when same function is specified', () => {
    const same = (a: number, b: number) => Math.abs(a) === Math.abs(b);
    it('uses same value to do comparison', () => {
      expect(startsWith(same, -1, wrap([1, 2, 3]))).toBe(true);
      expect(startsWith(() => false, 1, wrap([1, 2, 3]))).toBe(false);
    });
  });

  describe('when iterable is a string', () => {
    it('warns', () => {
      startsWith([], 'abc');
      expect(console.warn).callsMatchSnapshot();
    });
  });
});
