/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$to-object.js#1643907550781
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import { _asyncIterator } from '../../internal/asyncish.js';
import { asyncEnsureIterable } from '../../internal/async-iterable.js';

export async function __asyncToObject(iterable, proto = Object.prototype) {
  const obj = Object.create(proto);
  let _iteratorAbruptCompletion = false;
  let _didIteratorError = false;
  let _iterator;
  let _iteratorError;

  try {
    _iterator = _asyncIterator(iterable);
    for (
      let _step, _step2;
      (_step2 = _iterator.next()),
        (_iteratorAbruptCompletion = !(_step =
          !(_step2 instanceof Promise) && !(_step2.value instanceof Promise)
            ? _step2
            : await _step2).done);
      _iteratorAbruptCompletion = false
    ) {
      const [key, value] = _step.value;
      obj[key] = value;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (_iteratorAbruptCompletion && _iterator.return != null) {
        await _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return obj;
}

export function asyncToObject(iterable, proto) {
  return __asyncToObject(asyncEnsureIterable(iterable), proto);
}
