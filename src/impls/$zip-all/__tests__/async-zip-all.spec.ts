/* @macrome
 * @generatedby /generate/generators/impls/index.cjs
 * @generatedfrom ./$zip-all.spec.ts#1643837503118
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import assert from 'static-type-assert';

import { AsyncIterableIterator } from '../../../types/async-iterable';
import { asyncZipAll } from 'iter-tools-es';

declare const Ø: never;

// zipAll()
assert<AsyncIterableIterator<[number | undefined, string | undefined]>>(
  asyncZipAll(Ø as [0, 1, 2], Ø as ['a', 'b', 'c']),
);
assert<AsyncIterableIterator<[number | undefined, string | undefined, boolean | undefined]>>(
  asyncZipAll(Ø as [0, 1, 2], Ø as ['a', 'b', 'c'], Ø as [true, false, true]),
);

// zipAll({ filler })
assert<AsyncIterableIterator<[number | Date, string | Date]>>(
  asyncZipAll({ filler: new Date() }, Ø as [0, 1, 2], Ø as ['a', 'b', 'c']),
);
assert<AsyncIterableIterator<[number | Date, string | Date, boolean | Date]>>(
  asyncZipAll(
    { filler: new Date() },
    Ø as [0, 1, 2],
    Ø as ['a', 'b', 'c'],
    Ø as [true, false, true],
  ),
);
